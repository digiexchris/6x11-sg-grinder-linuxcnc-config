
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.44+71 (git sha1 6b9321250, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Parsing `globals.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: globals.v
Parsing Verilog input from `globals.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `spi.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: spi.v
Parsing Verilog input from `spi.v' to AST representation.
Storing AST representation for module `$abstract\spi'.
Successfully finished Verilog frontend.

-- Parsing `freqin.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: freqin.v
Parsing Verilog input from `freqin.v' to AST representation.
Storing AST representation for module `$abstract\freqin'.
Successfully finished Verilog frontend.

-- Parsing `pwmout.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: pwmout.v
Parsing Verilog input from `pwmout.v' to AST representation.
Storing AST representation for module `$abstract\pwmout'.
Successfully finished Verilog frontend.

-- Parsing `stepdir.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: stepdir.v
Parsing Verilog input from `stepdir.v' to AST representation.
Storing AST representation for module `$abstract\stepdir'.
Successfully finished Verilog frontend.

-- Parsing `debouncer.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: debouncer.v
Parsing Verilog input from `debouncer.v' to AST representation.
Storing AST representation for module `$abstract\debouncer'.
Successfully finished Verilog frontend.

-- Parsing `toggle.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: toggle.v
Parsing Verilog input from `toggle.v' to AST representation.
Storing AST representation for module `$abstract\toggle'.
Successfully finished Verilog frontend.

-- Parsing `pwmmod.v' using frontend ` -vlog2k' --

8. Executing Verilog-2005 frontend: pwmmod.v
Parsing Verilog input from `pwmmod.v' to AST representation.
Storing AST representation for module `$abstract\pwmmod'.
Successfully finished Verilog frontend.

-- Parsing `rio.v' using frontend ` -vlog2k' --

9. Executing Verilog-2005 frontend: rio.v
Parsing Verilog input from `rio.v' to AST representation.
Storing AST representation for module `$abstract\rio'.
Successfully finished Verilog frontend.

-- Running command `synth_gowin -noalu -nowidelut -top rio -json rio.json' --

10. Executing SYNTH_GOWIN pass.

10.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER4_MEM'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES4_MEM'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\DQS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Generating RTLIL representation for module `\DCS'.
Successfully finished Verilog frontend.

10.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

10.3. Executing HIERARCHY pass (managing design hierarchy).

10.4. Executing AST frontend in derive mode using pre-parsed AST for module `\rio'.
Generating RTLIL representation for module `\rio'.

10.4.1. Analyzing design hierarchy..
Top module:  \rio

10.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\stepdir'.
Generating RTLIL representation for module `\stepdir'.
Parameter \DIVIDER = 2700

10.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\pwmout'.
Parameter \DIVIDER = 2700
Generating RTLIL representation for module `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100'.
Parameter \RESET_CNT = 5400000

10.4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\freqin'.
Parameter \RESET_CNT = 5400000
Generating RTLIL representation for module `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000'.
Parameter \BUFFER_SIZE = 16'0000000010101000
Parameter \MSGID = 1953067639

10.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\spi'.
Parameter \BUFFER_SIZE = 16'0000000010101000
Parameter \MSGID = 1953067639
Generating RTLIL representation for module `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi'.

10.4.6. Analyzing design hierarchy..
Top module:  \rio
Used module:     \stepdir
Used module:     $paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100
Used module:     $paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000
Used module:     $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi

10.4.7. Analyzing design hierarchy..
Top module:  \rio
Used module:     \stepdir
Used module:     $paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100
Used module:     $paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000
Used module:     $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi
Removing unused module `$abstract\rio'.
Removing unused module `$abstract\pwmmod'.
Removing unused module `$abstract\toggle'.
Removing unused module `$abstract\debouncer'.
Removing unused module `$abstract\stepdir'.
Removing unused module `$abstract\pwmout'.
Removing unused module `$abstract\freqin'.
Removing unused module `$abstract\spi'.
Removed 8 unused modules.

10.5. Executing PROC pass (convert processes to netlists).

10.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Cleaned up 1 empty switch.

10.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189 in module DFFS.
Marked 2 switch rules as full_case in process $proc$spi.v:47$407 in module $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.
Marked 1 switch rules as full_case in process $proc$spi.v:28$402 in module $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.
Marked 1 switch rules as full_case in process $proc$freqin.v:15$389 in module $paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.
Marked 3 switch rules as full_case in process $proc$pwmout.v:20$376 in module $paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.
Marked 2 switch rules as full_case in process $proc$stepdir.v:18$361 in module stepdir.
Marked 1 switch rules as full_case in process $proc$rio.v:94$348 in module rio.
Marked 2 switch rules as full_case in process $proc$rio.v:77$344 in module rio.
Removed a total of 0 dead cases.

10.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 13 redundant assignments.
Promoted 72 assignments to connections.

10.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
  Set init value: \Q = 1'0
Found init rule in `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:0$409'.
  Set init value: \sync = 1'0
Found init rule in `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:10$394'.
  Set init value: \freq_cnt = 0
Found init rule in `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:0$393'.
  Set init value: \frequency = 0
Found init rule in `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:17$386'.
  Set init value: \pulse = 1'0
Found init rule in `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:16$385'.
  Set init value: \dtyAbs = 0
Found init rule in `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:14$384'.
  Set init value: \counter = 13'0000000000000
Found init rule in `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:0$383'.
  Set init value: \dir = 1'0
Found init rule in `\stepdir.$proc$stepdir.v:15$374'.
  Set init value: \positionMem = 0
Found init rule in `\stepdir.$proc$stepdir.v:14$373'.
  Set init value: \velocityAbs = 0
Found init rule in `\stepdir.$proc$stepdir.v:13$372'.
  Set init value: \jointCounter = 0
Found init rule in `\stepdir.$proc$stepdir.v:0$371'.
  Set init value: \step = 1'0
Found init rule in `\rio.$proc$rio.v:75$359'.
  Set init value: \timeout_counter = 23'00000000000000000000000
Found init rule in `\rio.$proc$rio.v:60$357'.
  Set init value: \INTERFACE_TIMEOUT = 1'0

10.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Found async reset \CLEAR in `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
Found async reset \PRESET in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Found async reset \PRESET in `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
Found async reset \CLEAR in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Found async reset \CLEAR in `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
Found async reset \PRESET in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Found async reset \PRESET in `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.

10.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~44 debug messages>

10.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
Creating decoders for process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
     1/8: $1$lookahead\mem3$286[15:0]$303
     2/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$278[3:0]$299
     3/8: $1$lookahead\mem2$285[15:0]$302
     4/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$277[3:0]$298
     5/8: $1$lookahead\mem1$284[15:0]$301
     6/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$276[3:0]$297
     7/8: $1$lookahead\mem0$283[15:0]$300
     8/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$275[3:0]$296
Creating decoders for process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
Creating decoders for process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
     1/4: $1$lookahead\mem1$250[15:0]$259
     2/4: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$246[3:0]$257
     3/4: $1$lookahead\mem0$249[15:0]$258
     4/4: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$245[3:0]$256
Creating decoders for process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
Creating decoders for process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
     1/2: $1$lookahead\mem$231[15:0]$236
     2/2: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$229[3:0]$235
Creating decoders for process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Creating decoders for process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Creating decoders for process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Creating decoders for process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Creating decoders for process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Creating decoders for process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Creating decoders for process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Creating decoders for process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Creating decoders for process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Creating decoders for process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Creating decoders for process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Creating decoders for process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
Creating decoders for process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Creating decoders for process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Creating decoders for process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Creating decoders for process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Creating decoders for process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Creating decoders for process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Creating decoders for process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Creating decoders for process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Creating decoders for process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
Creating decoders for process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
Creating decoders for process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:0$409'.
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:47$407'.
     1/1: $0\byte_data_sent[167:0]
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:38$405'.
     1/2: $0\sync[0:0]
     2/2: $0\byte_data_received[167:0]
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:28$402'.
     1/2: $0\byte_data_receive[167:0]
     2/2: $0\bitcnt[15:0]
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:19$398'.
Creating decoders for process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:16$395'.
Creating decoders for process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:10$394'.
Creating decoders for process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:0$393'.
Creating decoders for process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
     1/3: $0\freq_cnt[31:0]
     2/3: $0\valid[0:0]
     3/3: $0\frequency[31:0]
Creating decoders for process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:12$387'.
Creating decoders for process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:17$386'.
Creating decoders for process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:16$385'.
Creating decoders for process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:14$384'.
Creating decoders for process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:0$383'.
Creating decoders for process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
     1/4: $0\dir[0:0]
     2/4: $0\dtyAbs[31:0]
     3/4: $0\pulse[0:0]
     4/4: $0\counter[12:0]
Creating decoders for process `\stepdir.$proc$stepdir.v:15$374'.
Creating decoders for process `\stepdir.$proc$stepdir.v:14$373'.
Creating decoders for process `\stepdir.$proc$stepdir.v:13$372'.
Creating decoders for process `\stepdir.$proc$stepdir.v:0$371'.
Creating decoders for process `\stepdir.$proc$stepdir.v:18$361'.
     1/4: $0\velocityAbs[31:0]
     2/4: $0\jointCounter[31:0]
     3/4: $0\positionMem[31:0]
     4/4: $0\step[0:0]
Creating decoders for process `\rio.$proc$rio.v:75$359'.
Creating decoders for process `\rio.$proc$rio.v:61$358'.
Creating decoders for process `\rio.$proc$rio.v:60$357'.
Creating decoders for process `\rio.$proc$rio.v:94$348'.
     1/1: $0\header_tx[31:0]
Creating decoders for process `\rio.$proc$rio.v:77$344'.
     1/2: $0\timeout_counter[22:0]
     2/2: $0\INTERFACE_TIMEOUT[0:0]
Creating decoders for process `\rio.$proc$rio.v:71$342'.

10.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\rio.\ESTOP' from process `\rio.$proc$rio.v:61$358'.

10.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$596' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$597' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$598' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$599' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$275' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$600' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$276' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$601' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$277' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$602' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$278' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$603' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$283' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$604' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$284' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$605' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$285' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$606' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$286' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$607' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$608' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$609' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$245' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$610' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$246' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$611' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$249' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$612' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$250' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$613' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$614' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$229' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$615' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$231' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$616' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
  created $adff cell `$procdff$619' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
  created $adff cell `$procdff$622' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
  created $adff cell `$procdff$625' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
  created $adff cell `$procdff$628' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
  created $dff cell `$procdff$629' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
  created $dff cell `$procdff$630' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
  created $dff cell `$procdff$631' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
  created $dff cell `$procdff$632' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
  created $dff cell `$procdff$633' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
  created $dff cell `$procdff$634' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
  created $adff cell `$procdff$637' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
  created $adff cell `$procdff$640' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
  created $adff cell `$procdff$643' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
  created $adff cell `$procdff$646' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\byte_data_sent' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:47$407'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\sync' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:38$405'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\byte_data_received' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:38$405'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\bitcnt' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:28$402'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\byte_data_receive' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:28$402'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\SSELr' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:19$398'.
  created $dff cell `$procdff$658' with positive edge clock.
Creating register for signal `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.\SCKr' using process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:16$395'.
  created $dff cell `$procdff$659' with positive edge clock.
Creating register for signal `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.\frequency' using process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
  created $dff cell `$procdff$660' with positive edge clock.
Creating register for signal `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.\valid' using process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
  created $dff cell `$procdff$661' with positive edge clock.
Creating register for signal `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.\freq_cnt' using process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
  created $dff cell `$procdff$662' with positive edge clock.
Creating register for signal `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.\SIGr' using process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:12$387'.
  created $dff cell `$procdff$663' with positive edge clock.
Creating register for signal `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.\dir' using process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
  created $dff cell `$procdff$664' with positive edge clock.
Creating register for signal `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.\counter' using process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
  created $dff cell `$procdff$665' with positive edge clock.
Creating register for signal `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.\dtyAbs' using process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.\pulse' using process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
  created $dff cell `$procdff$667' with positive edge clock.
Creating register for signal `\stepdir.\step' using process `\stepdir.$proc$stepdir.v:18$361'.
  created $dff cell `$procdff$668' with positive edge clock.
Creating register for signal `\stepdir.\jointCounter' using process `\stepdir.$proc$stepdir.v:18$361'.
  created $dff cell `$procdff$669' with positive edge clock.
Creating register for signal `\stepdir.\velocityAbs' using process `\stepdir.$proc$stepdir.v:18$361'.
  created $dff cell `$procdff$670' with positive edge clock.
Creating register for signal `\stepdir.\positionMem' using process `\stepdir.$proc$stepdir.v:18$361'.
  created $dff cell `$procdff$671' with positive edge clock.
Creating register for signal `\rio.\header_tx' using process `\rio.$proc$rio.v:94$348'.
  created $dff cell `$procdff$672' with positive edge clock.
Creating register for signal `\rio.\INTERFACE_TIMEOUT' using process `\rio.$proc$rio.v:77$344'.
  created $dff cell `$procdff$673' with positive edge clock.
Creating register for signal `\rio.\timeout_counter' using process `\rio.$proc$rio.v:77$344'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `\rio.\INTERFACE_SYNCr' using process `\rio.$proc$rio.v:71$342'.
  created $dff cell `$procdff$675' with positive edge clock.

10.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
Removing empty process `RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
Removing empty process `RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
Removing empty process `RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
Removing empty process `RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
Removing empty process `RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
Removing empty process `ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Removing empty process `DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Removing empty process `DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Removing empty process `DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Removing empty process `DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
Removing empty process `DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Removing empty process `DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Removing empty process `DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Removing empty process `DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
Removing empty process `DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
Removing empty process `DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
Removing empty process `DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
Removing empty process `DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
Removing empty process `DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
Removing empty process `DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
Removing empty process `DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
Removing empty process `DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
Removing empty process `DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
Removing empty process `DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
Removing empty process `DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Removing empty process `DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
Removing empty process `DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Removing empty process `DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Removing empty process `DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Removing empty process `DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
Removing empty process `DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Removing empty process `DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Removing empty process `DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Removing empty process `DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
Removing empty process `DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
Removing empty process `DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
Removing empty process `DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
Removing empty process `DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
Removing empty process `DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
Removing empty process `DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
Removing empty process `DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
Removing empty process `DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
Removing empty process `DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
Removing empty process `DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
Removing empty process `DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
Removing empty process `DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:0$409'.
Found and cleaned up 4 empty switches in `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:47$407'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:47$407'.
Found and cleaned up 2 empty switches in `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:38$405'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:38$405'.
Found and cleaned up 2 empty switches in `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:28$402'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:28$402'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:19$398'.
Removing empty process `$paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.$proc$spi.v:16$395'.
Removing empty process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:10$394'.
Removing empty process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:0$393'.
Found and cleaned up 2 empty switches in `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
Removing empty process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:15$389'.
Removing empty process `$paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.$proc$freqin.v:12$387'.
Removing empty process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:17$386'.
Removing empty process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:16$385'.
Removing empty process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:14$384'.
Removing empty process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:0$383'.
Found and cleaned up 5 empty switches in `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
Removing empty process `$paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.$proc$pwmout.v:20$376'.
Removing empty process `stepdir.$proc$stepdir.v:15$374'.
Removing empty process `stepdir.$proc$stepdir.v:14$373'.
Removing empty process `stepdir.$proc$stepdir.v:13$372'.
Removing empty process `stepdir.$proc$stepdir.v:0$371'.
Found and cleaned up 5 empty switches in `\stepdir.$proc$stepdir.v:18$361'.
Removing empty process `stepdir.$proc$stepdir.v:18$361'.
Removing empty process `rio.$proc$rio.v:75$359'.
Removing empty process `rio.$proc$rio.v:61$358'.
Removing empty process `rio.$proc$rio.v:60$357'.
Found and cleaned up 1 empty switch in `\rio.$proc$rio.v:94$348'.
Removing empty process `rio.$proc$rio.v:94$348'.
Found and cleaned up 2 empty switches in `\rio.$proc$rio.v:77$344'.
Removing empty process `rio.$proc$rio.v:77$344'.
Removing empty process `rio.$proc$rio.v:71$342'.
Cleaned up 44 empty switches.

10.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.
<suppressed ~3 debug messages>
Optimizing module $paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.
Optimizing module $paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.
<suppressed ~1 debug messages>
Optimizing module stepdir.
<suppressed ~2 debug messages>
Optimizing module rio.
<suppressed ~3 debug messages>

10.6. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$291f7960198507ec1186f814a8d1a1d1e55cf6f6\spi.
Deleting now unused module $paramod\freqin\RESET_CNT=s32'00000000010100100110010111000000.
Deleting now unused module $paramod\pwmout\DIVIDER=s32'00000000000000000000101010001100.
Deleting now unused module stepdir.
<suppressed ~6 debug messages>

10.7. Executing TRIBUF pass.

10.8. Executing DEMINOUT pass (demote inout ports to input or output).

10.9. Executing SYNTH pass.

10.9.1. Executing PROC pass (convert processes to netlists).

10.9.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.9.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

10.9.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

10.9.1.4. Executing PROC_INIT pass (extract init attributes).

10.9.1.5. Executing PROC_ARST pass (detect async resets in processes).

10.9.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

10.9.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

10.9.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

10.9.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

10.9.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.9.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.9.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 3 unused cells and 134 unused wires.
<suppressed ~5 debug messages>

10.9.4. Executing CHECK pass (checking for obvious problems).
Checking module rio...
Found and reported 0 problems.

10.9.5. Executing OPT pass (performing simple optimizations).

10.9.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

10.9.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.9.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.5.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 1 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 2 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 3 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 4 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 5 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 6 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 7 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 8 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 9 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 10 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 11 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 12 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 13 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 14 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 15 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 16 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 17 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 18 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 19 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 20 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 21 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 22 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 23 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 24 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 25 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 26 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 27 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 28 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 29 on $procdff$672 ($dff) from module rio.
Setting constant 1-bit at position 30 on $procdff$672 ($dff) from module rio.
Setting constant 0-bit at position 31 on $procdff$672 ($dff) from module rio.

10.9.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

10.9.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.5.9. Rerunning OPT passes. (Maybe there is more to do..)

10.9.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.9.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.5.13. Executing OPT_DFF pass (perform DFF optimizations).

10.9.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.5.16. Finished OPT passes. (There is nothing left to do.)

10.9.6. Executing FSM pass (extract and optimize FSM).

10.9.6.1. Executing FSM_DETECT pass (finding FSMs in design).

10.9.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.9.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.9.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.9.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.9.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.9.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

10.9.7. Executing OPT pass (performing simple optimizations).

10.9.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.9.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$674 ($dff) from module rio (D = $procmux$585_Y, Q = \timeout_counter, rval = 23'00000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$682 ($sdff) from module rio (D = $add$rio.v:82$347_Y [22:0], Q = \timeout_counter).
Adding EN signal on $procdff$673 ($dff) from module rio (D = $procmux$591_Y, Q = \INTERFACE_TIMEOUT).
Adding EN signal on $flatten\stepdir5.$procdff$671 ($dff) from module rio (D = $flatten\stepdir5.$procmux$569_Y, Q = \stepdir5.positionMem).
Adding EN signal on $flatten\stepdir5.$procdff$668 ($dff) from module rio (D = $flatten\stepdir5.$not$stepdir.v:27$368_Y, Q = \stepdir5.step).
Adding EN signal on $flatten\stepdir4.$procdff$671 ($dff) from module rio (D = $flatten\stepdir4.$procmux$569_Y, Q = \stepdir4.positionMem).
Adding EN signal on $flatten\stepdir4.$procdff$668 ($dff) from module rio (D = $flatten\stepdir4.$not$stepdir.v:27$368_Y, Q = \stepdir4.step).
Adding EN signal on $flatten\stepdir3.$procdff$671 ($dff) from module rio (D = $flatten\stepdir3.$procmux$569_Y, Q = \stepdir3.positionMem).
Adding EN signal on $flatten\stepdir3.$procdff$668 ($dff) from module rio (D = $flatten\stepdir3.$not$stepdir.v:27$368_Y, Q = \stepdir3.step).
Adding EN signal on $flatten\spi0.$procdff$657 ($dff) from module rio (D = { \spi0.byte_data_receive [166:0] \PININ_SPI0_MOSI }, Q = \spi0.byte_data_receive).
Adding SRST signal on $flatten\spi0.$procdff$656 ($dff) from module rio (D = $flatten\spi0.$procmux$519_Y, Q = \spi0.bitcnt, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$708 ($sdff) from module rio (D = $flatten\spi0.$add$spi.v:33$404_Y, Q = \spi0.bitcnt).
Adding EN signal on $flatten\spi0.$procdff$655 ($dff) from module rio (D = \spi0.byte_data_receive, Q = \spi0.byte_data_received).
Adding SRST signal on $flatten\spi0.$procdff$654 ($dff) from module rio (D = $flatten\spi0.$procmux$506_Y, Q = \spi0.sync, rval = 1'0).
Adding EN signal on $flatten\spi0.$procdff$653 ($dff) from module rio (D = $flatten\spi0.$procmux$502_Y, Q = \spi0.byte_data_sent).
Adding SRST signal on $auto$ff.cc:266:slice$714 ($dffe) from module rio (D = { $flatten\spi0.$procmux$499_Y [167:136] $flatten\spi0.$procmux$499_Y [2:0] }, Q = { \spi0.byte_data_sent [167:136] \spi0.byte_data_sent [2:0] }, rval = 35'01100001011101000110000101100100000).
Adding SRST signal on $flatten\pwmout2.$procdff$667 ($dff) from module rio (D = $flatten\pwmout2.$procmux$551_Y, Q = \pwmout2.pulse, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$723 ($sdff) from module rio (D = $flatten\pwmout2.$procmux$551_Y, Q = \pwmout2.pulse).
Adding EN signal on $flatten\pwmout2.$procdff$665 ($dff) from module rio (D = $flatten\pwmout2.$procmux$557_Y, Q = \pwmout2.counter).
Adding SRST signal on $auto$ff.cc:266:slice$731 ($dffe) from module rio (D = $flatten\pwmout2.$add$pwmout.v:29$380_Y [12:0], Q = \pwmout2.counter, rval = 13'0000000000000).
Adding SRST signal on $flatten\freqin1.$procdff$662 ($dff) from module rio (D = $flatten\freqin1.$add$freqin.v:18$390_Y, Q = \freqin1.freq_cnt, rval = 0).
Adding SRST signal on $flatten\freqin1.$procdff$661 ($dff) from module rio (D = $flatten\freqin1.$procmux$529_Y, Q = \freqin1.valid, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$736 ($sdff) from module rio (D = 1'0, Q = \freqin1.valid).
Adding EN signal on $flatten\freqin1.$procdff$660 ($dff) from module rio (D = $flatten\freqin1.$0\frequency[31:0], Q = \freqin1.frequency).

10.9.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

10.9.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~3 debug messages>

10.9.7.9. Rerunning OPT passes. (Maybe there is more to do..)

10.9.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

10.9.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

10.9.7.13. Executing OPT_DFF pass (perform DFF optimizations).

10.9.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

10.9.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.7.16. Rerunning OPT passes. (Maybe there is more to do..)

10.9.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

10.9.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.7.20. Executing OPT_DFF pass (perform DFF optimizations).

10.9.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.7.23. Finished OPT passes. (There is nothing left to do.)

10.9.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 32 bits (of 168) from FF cell rio.$auto$ff.cc:266:slice$710 ($dffe).
Removed top 1 bits (of 2) from port B of cell rio.$eq$rio.v:72$343 ($eq).
Removed top 10 bits (of 32) from port B of cell rio.$lt$rio.v:81$346 ($lt).
Removed top 31 bits (of 32) from port B of cell rio.$add$rio.v:82$347 ($add).
Removed top 9 bits (of 32) from port Y of cell rio.$add$rio.v:82$347 ($add).
Removed top 32 bits (of 168) from mux cell rio.$flatten\spi0.$procmux$502 ($mux).
Removed top 1 bits (of 32) from port B of cell rio.$flatten\spi0.$eq$spi.v:41$406 ($eq).
Removed top 15 bits (of 16) from port B of cell rio.$flatten\spi0.$add$spi.v:33$404 ($add).
Removed top 1 bits (of 2) from port B of cell rio.$flatten\spi0.$eq$spi.v:22$401 ($eq).
Removed top 1 bits (of 2) from port B of cell rio.$flatten\spi0.$eq$spi.v:17$396 ($eq).
Removed top 9 bits (of 32) from port B of cell rio.$flatten\freqin1.$gt$freqin.v:23$392 ($gt).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\freqin1.$add$freqin.v:18$390 ($add).
Removed top 1 bits (of 2) from port B of cell rio.$flatten\freqin1.$eq$freqin.v:13$388 ($eq).
Removed top 1 bits (of 13) from port B of cell rio.$flatten\pwmout2.$eq$pwmout.v:30$381 ($eq).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\pwmout2.$add$pwmout.v:29$380 ($add).
Removed top 19 bits (of 32) from port Y of cell rio.$flatten\pwmout2.$add$pwmout.v:29$380 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\pwmout2.$gt$pwmout.v:21$377 ($gt).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir3.$sub$stepdir.v:33$370 ($sub).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir3.$add$stepdir.v:31$369 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir3.$add$stepdir.v:24$363 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir3.$gt$stepdir.v:12$360 ($gt).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir4.$sub$stepdir.v:33$370 ($sub).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir4.$add$stepdir.v:31$369 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir4.$add$stepdir.v:24$363 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir4.$gt$stepdir.v:12$360 ($gt).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir5.$sub$stepdir.v:33$370 ($sub).
Removed top 30 bits (of 32) from port B of cell rio.$flatten\stepdir5.$add$stepdir.v:31$369 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir5.$add$stepdir.v:24$363 ($add).
Removed top 31 bits (of 32) from port B of cell rio.$flatten\stepdir5.$gt$stepdir.v:12$360 ($gt).
Removed top 9 bits (of 32) from wire rio.$add$rio.v:82$347_Y.
Removed top 19 bits (of 32) from wire rio.$flatten\pwmout2.$add$pwmout.v:29$380_Y.
Removed top 32 bits (of 168) from wire rio.$flatten\spi0.$procmux$502_Y.
Removed top 32 bits (of 168) from wire rio.rx_data.
Removed top 32 bits (of 168) from wire rio.tx_data.

10.9.9. Executing PEEPOPT pass (run peephole optimizers).

10.9.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

10.9.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rio:
  creating $macc model for $add$rio.v:82$347 ($add).
  creating $macc model for $flatten\freqin1.$add$freqin.v:18$390 ($add).
  creating $macc model for $flatten\pwmout2.$add$pwmout.v:29$380 ($add).
  creating $macc model for $flatten\pwmout2.$neg$pwmout.v:25$378 ($neg).
  creating $macc model for $flatten\spi0.$add$spi.v:33$404 ($add).
  creating $macc model for $flatten\stepdir3.$add$stepdir.v:24$363 ($add).
  creating $macc model for $flatten\stepdir3.$add$stepdir.v:31$369 ($add).
  creating $macc model for $flatten\stepdir3.$neg$stepdir.v:22$362 ($neg).
  creating $macc model for $flatten\stepdir3.$sub$stepdir.v:33$370 ($sub).
  creating $macc model for $flatten\stepdir4.$add$stepdir.v:24$363 ($add).
  creating $macc model for $flatten\stepdir4.$add$stepdir.v:31$369 ($add).
  creating $macc model for $flatten\stepdir4.$neg$stepdir.v:22$362 ($neg).
  creating $macc model for $flatten\stepdir4.$sub$stepdir.v:33$370 ($sub).
  creating $macc model for $flatten\stepdir5.$add$stepdir.v:24$363 ($add).
  creating $macc model for $flatten\stepdir5.$add$stepdir.v:31$369 ($add).
  creating $macc model for $flatten\stepdir5.$neg$stepdir.v:22$362 ($neg).
  creating $macc model for $flatten\stepdir5.$sub$stepdir.v:33$370 ($sub).
  creating $alu model for $macc $flatten\stepdir5.$sub$stepdir.v:33$370.
  creating $alu model for $macc $flatten\stepdir5.$neg$stepdir.v:22$362.
  creating $alu model for $macc $flatten\stepdir5.$add$stepdir.v:31$369.
  creating $alu model for $macc $flatten\stepdir5.$add$stepdir.v:24$363.
  creating $alu model for $macc $flatten\stepdir4.$sub$stepdir.v:33$370.
  creating $alu model for $macc $flatten\stepdir4.$neg$stepdir.v:22$362.
  creating $alu model for $macc $flatten\stepdir4.$add$stepdir.v:31$369.
  creating $alu model for $macc $flatten\stepdir4.$add$stepdir.v:24$363.
  creating $alu model for $macc $flatten\stepdir3.$sub$stepdir.v:33$370.
  creating $alu model for $macc $flatten\stepdir3.$neg$stepdir.v:22$362.
  creating $alu model for $macc $flatten\stepdir3.$add$stepdir.v:31$369.
  creating $alu model for $macc $flatten\stepdir3.$add$stepdir.v:24$363.
  creating $alu model for $macc $flatten\spi0.$add$spi.v:33$404.
  creating $alu model for $macc $flatten\pwmout2.$neg$pwmout.v:25$378.
  creating $alu model for $macc $flatten\pwmout2.$add$pwmout.v:29$380.
  creating $alu model for $macc $flatten\freqin1.$add$freqin.v:18$390.
  creating $alu model for $macc $add$rio.v:82$347.
  creating $alu model for $flatten\freqin1.$gt$freqin.v:23$392 ($gt): new $alu
  creating $alu model for $flatten\pwmout2.$gt$pwmout.v:21$377 ($gt): new $alu
  creating $alu model for $flatten\stepdir3.$ge$stepdir.v:26$367 ($ge): new $alu
  creating $alu model for $flatten\stepdir3.$gt$stepdir.v:12$360 ($gt): new $alu
  creating $alu model for $flatten\stepdir4.$ge$stepdir.v:26$367 ($ge): new $alu
  creating $alu model for $flatten\stepdir4.$gt$stepdir.v:12$360 ($gt): new $alu
  creating $alu model for $flatten\stepdir5.$ge$stepdir.v:26$367 ($ge): new $alu
  creating $alu model for $flatten\stepdir5.$gt$stepdir.v:12$360 ($gt): new $alu
  creating $alu model for $lt$rio.v:81$346 ($lt): new $alu
  creating $alu cell for $lt$rio.v:81$346: $auto$alumacc.cc:485:replace_alu$755
  creating $alu cell for $flatten\stepdir5.$gt$stepdir.v:12$360: $auto$alumacc.cc:485:replace_alu$766
  creating $alu cell for $flatten\stepdir5.$ge$stepdir.v:26$367: $auto$alumacc.cc:485:replace_alu$773
  creating $alu cell for $flatten\stepdir4.$gt$stepdir.v:12$360: $auto$alumacc.cc:485:replace_alu$786
  creating $alu cell for $flatten\stepdir4.$ge$stepdir.v:26$367: $auto$alumacc.cc:485:replace_alu$793
  creating $alu cell for $flatten\stepdir3.$gt$stepdir.v:12$360: $auto$alumacc.cc:485:replace_alu$806
  creating $alu cell for $flatten\stepdir3.$ge$stepdir.v:26$367: $auto$alumacc.cc:485:replace_alu$813
  creating $alu cell for $flatten\pwmout2.$gt$pwmout.v:21$377: $auto$alumacc.cc:485:replace_alu$826
  creating $alu cell for $flatten\freqin1.$gt$freqin.v:23$392: $auto$alumacc.cc:485:replace_alu$833
  creating $alu cell for $add$rio.v:82$347: $auto$alumacc.cc:485:replace_alu$838
  creating $alu cell for $flatten\freqin1.$add$freqin.v:18$390: $auto$alumacc.cc:485:replace_alu$841
  creating $alu cell for $flatten\pwmout2.$add$pwmout.v:29$380: $auto$alumacc.cc:485:replace_alu$844
  creating $alu cell for $flatten\pwmout2.$neg$pwmout.v:25$378: $auto$alumacc.cc:485:replace_alu$847
  creating $alu cell for $flatten\spi0.$add$spi.v:33$404: $auto$alumacc.cc:485:replace_alu$850
  creating $alu cell for $flatten\stepdir3.$add$stepdir.v:24$363: $auto$alumacc.cc:485:replace_alu$853
  creating $alu cell for $flatten\stepdir3.$add$stepdir.v:31$369: $auto$alumacc.cc:485:replace_alu$856
  creating $alu cell for $flatten\stepdir3.$neg$stepdir.v:22$362: $auto$alumacc.cc:485:replace_alu$859
  creating $alu cell for $flatten\stepdir3.$sub$stepdir.v:33$370: $auto$alumacc.cc:485:replace_alu$862
  creating $alu cell for $flatten\stepdir4.$add$stepdir.v:24$363: $auto$alumacc.cc:485:replace_alu$865
  creating $alu cell for $flatten\stepdir4.$add$stepdir.v:31$369: $auto$alumacc.cc:485:replace_alu$868
  creating $alu cell for $flatten\stepdir4.$neg$stepdir.v:22$362: $auto$alumacc.cc:485:replace_alu$871
  creating $alu cell for $flatten\stepdir4.$sub$stepdir.v:33$370: $auto$alumacc.cc:485:replace_alu$874
  creating $alu cell for $flatten\stepdir5.$add$stepdir.v:24$363: $auto$alumacc.cc:485:replace_alu$877
  creating $alu cell for $flatten\stepdir5.$add$stepdir.v:31$369: $auto$alumacc.cc:485:replace_alu$880
  creating $alu cell for $flatten\stepdir5.$neg$stepdir.v:22$362: $auto$alumacc.cc:485:replace_alu$883
  creating $alu cell for $flatten\stepdir5.$sub$stepdir.v:33$370: $auto$alumacc.cc:485:replace_alu$886
  created 26 $alu and 0 $macc cells.

10.9.12. Executing SHARE pass (SAT-based resource sharing).

10.9.13. Executing OPT pass (performing simple optimizations).

10.9.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~4 debug messages>

10.9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

10.9.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.13.6. Executing OPT_DFF pass (perform DFF optimizations).

10.9.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

10.9.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.13.9. Rerunning OPT passes. (Maybe there is more to do..)

10.9.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

10.9.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.9.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.9.13.13. Executing OPT_DFF pass (perform DFF optimizations).

10.9.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.9.13.16. Finished OPT passes. (There is nothing left to do.)

10.9.14. Executing MEMORY pass.

10.9.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

10.9.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

10.9.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

10.9.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

10.9.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

10.9.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

10.9.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

10.9.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.9.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

10.9.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.10. Executing MEMORY_LIBMAP pass (mapping memories to cells).

10.11. Executing TECHMAP pass (map to technology primitives).

10.11.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

10.11.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

10.11.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

10.12. Executing OPT pass (performing simple optimizations).

10.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~32 debug messages>

10.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.12.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$738 ($dffe) from module rio (D = $flatten\freqin1.$add$freqin.v:18$390_Y, Q = \freqin1.frequency, rval = 0).

10.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 1 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

10.12.5. Rerunning OPT passes. (Removed registers in this run.)

10.12.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~1 debug messages>

10.12.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.12.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$721 ($sdffce) from module rio (D = { \spi0.byte_data_sent [166] \spi0.byte_data_sent [163:160] \spi0.byte_data_sent [158] \spi0.byte_data_sent [154] \spi0.byte_data_sent [152:150] \spi0.byte_data_sent [147:144] \spi0.byte_data_sent [142] \spi0.byte_data_sent [139:138] \spi0.byte_data_sent [136:135] }, Q = { \spi0.byte_data_sent [167] \spi0.byte_data_sent [164:161] \spi0.byte_data_sent [159] \spi0.byte_data_sent [155] \spi0.byte_data_sent [153:151] \spi0.byte_data_sent [148:145] \spi0.byte_data_sent [143] \spi0.byte_data_sent [140:139] \spi0.byte_data_sent [137:136] }, rval = 19'0000000000000000000).

10.12.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

10.12.10. Rerunning OPT passes. (Removed registers in this run.)

10.12.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.12.13. Executing OPT_DFF pass (perform DFF optimizations).

10.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.12.15. Finished fast OPT passes.

10.13. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

10.14. Executing OPT pass (performing simple optimizations).

10.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$497:
      Old ports: A={ \spi0.byte_data_sent [166:0] 1'0 }, B=168'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y
      New ports: A=\spi0.byte_data_sent [166:0], B=167'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:1]
      New connections: $flatten\spi0.$procmux$497_Y [0] = 1'0
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$502:
      Old ports: A=$flatten\spi0.$procmux$497_Y [135:0], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT 3'000 }, Y=$auto$wreduce.cc:461:run$743 [135:0]
      New ports: A=$flatten\spi0.$procmux$497_Y [135:1], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT 2'00 }, Y=$auto$wreduce.cc:461:run$743 [135:1]
      New connections: $auto$wreduce.cc:461:run$743 [0] = 1'0
  Optimizing cells in module \rio.
Performed a total of 2 changes.

10.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.6. Executing OPT_DFF pass (perform DFF optimizations).

10.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.9. Rerunning OPT passes. (Maybe there is more to do..)

10.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1094 ($sdffce) from module rio.

10.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.16. Rerunning OPT passes. (Maybe there is more to do..)

10.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$497:
      Old ports: A={ \spi0.byte_data_sent [166:1] 1'0 }, B=167'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:1]
      New ports: A=\spi0.byte_data_sent [166:1], B=166'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:2]
      New connections: $flatten\spi0.$procmux$497_Y [1] = 1'0
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$502:
      Old ports: A=$flatten\spi0.$procmux$497_Y [135:1], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT 2'00 }, Y=$auto$wreduce.cc:461:run$743 [135:1]
      New ports: A=$flatten\spi0.$procmux$497_Y [135:2], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT 1'0 }, Y=$auto$wreduce.cc:461:run$743 [135:2]
      New connections: $auto$wreduce.cc:461:run$743 [1] = 1'0
  Optimizing cells in module \rio.
Performed a total of 2 changes.

10.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.20. Executing OPT_DFF pass (perform DFF optimizations).

10.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.23. Rerunning OPT passes. (Maybe there is more to do..)

10.14.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.14.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1095 ($sdffce) from module rio.

10.14.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.30. Rerunning OPT passes. (Maybe there is more to do..)

10.14.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$497:
      Old ports: A={ \spi0.byte_data_sent [166:2] 1'0 }, B=166'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:2]
      New ports: A=\spi0.byte_data_sent [166:2], B=165'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:3]
      New connections: $flatten\spi0.$procmux$497_Y [2] = 1'0
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$502:
      Old ports: A=$flatten\spi0.$procmux$497_Y [135:2], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT 1'0 }, Y=$auto$wreduce.cc:461:run$743 [135:2]
      New ports: A=$flatten\spi0.$procmux$497_Y [135:3], B={ \freqin1.frequency [7:0] \freqin1.frequency [15:8] \freqin1.frequency [23:16] \freqin1.frequency [31:24] \stepdir3.positionMem [7:0] \stepdir3.positionMem [15:8] \stepdir3.positionMem [23:16] \stepdir3.positionMem [31:24] \stepdir4.positionMem [7:0] \stepdir4.positionMem [15:8] \stepdir4.positionMem [23:16] \stepdir4.positionMem [31:24] \stepdir5.positionMem [7:0] \stepdir5.positionMem [15:8] \stepdir5.positionMem [23:16] \stepdir5.positionMem [31:24] \freqin1.valid \PININ_BITIN6_BIT \PININ_BITIN7_BIT \PININ_BITIN8_BIT \PININ_BITIN9_BIT }, Y=$auto$wreduce.cc:461:run$743 [135:3]
      New connections: $auto$wreduce.cc:461:run$743 [2] = 1'0
  Optimizing cells in module \rio.
Performed a total of 2 changes.

10.14.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.34. Executing OPT_DFF pass (perform DFF optimizations).

10.14.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.37. Rerunning OPT passes. (Maybe there is more to do..)

10.14.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.14.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1096 ($sdffce) from module rio.

10.14.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.44. Rerunning OPT passes. (Maybe there is more to do..)

10.14.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$497:
      Old ports: A={ \spi0.byte_data_sent [166:3] 1'0 }, B=165'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:3]
      New ports: A=\spi0.byte_data_sent [166:3], B=164'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, Y=$flatten\spi0.$procmux$497_Y [167:4]
      New connections: $flatten\spi0.$procmux$497_Y [3] = 1'0
  Optimizing cells in module \rio.
Performed a total of 1 changes.

10.14.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.48. Executing OPT_DFF pass (perform DFF optimizations).

10.14.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.51. Rerunning OPT passes. (Maybe there is more to do..)

10.14.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.14.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.55. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$722 ($dffe) from module rio (D = \PININ_BITIN9_BIT, Q = \spi0.byte_data_sent [3], rval = 1'0).

10.14.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.58. Rerunning OPT passes. (Maybe there is more to do..)

10.14.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.14.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.14.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.14.62. Executing OPT_DFF pass (perform DFF optimizations).

10.14.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.14.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.14.65. Finished OPT passes. (There is nothing left to do.)

10.15. Executing TECHMAP pass (map to technology primitives).

10.15.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.15.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$7b00947614a4c48e09c066dca449366ddfa907a5\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$36fdbc18fab0758c8553dda57bd33e3f8f3e8765\_90_alu for cells of type $alu.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$e874d9688cf6f9b1e7354dc696c66145a4e4548c\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$0ed36e5356dd00b0a2b97a2f79a94e5cb793820a\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$6412f7f13655de512a17af2c71a87b50b4a57324\_90_alu for cells of type $alu.
Using template $paramod$050f15daba5036a0512adf25d3c6631f629623f7\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000010111 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~4554 debug messages>

10.16. Executing OPT pass (performing simple optimizations).

10.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~4286 debug messages>

10.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
<suppressed ~2292 debug messages>
Removed a total of 764 cells.

10.16.3. Executing OPT_DFF pass (perform DFF optimizations).

10.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 590 unused cells and 2681 unused wires.
<suppressed ~592 debug messages>

10.16.5. Finished fast OPT passes.

10.17. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port rio.PININ_BITIN6_BIT using IBUF.
Mapping port rio.PININ_BITIN7_BIT using IBUF.
Mapping port rio.PININ_BITIN8_BIT using IBUF.
Mapping port rio.PININ_BITIN9_BIT using IBUF.
Mapping port rio.PININ_FREQIN1_FREQ using IBUF.
Mapping port rio.PININ_SPI0_MOSI using IBUF.
Mapping port rio.PININ_SPI0_SCLK using IBUF.
Mapping port rio.PININ_SPI0_SEL using IBUF.
Mapping port rio.PINOUT_PWMOUT2_PWM using OBUF.
Mapping port rio.PINOUT_SPI0_MISO using OBUF.
Mapping port rio.PINOUT_STEPDIR3_DIR using OBUF.
Mapping port rio.PINOUT_STEPDIR3_EN using OBUF.
Mapping port rio.PINOUT_STEPDIR3_STEP using OBUF.
Mapping port rio.PINOUT_STEPDIR4_DIR using OBUF.
Mapping port rio.PINOUT_STEPDIR4_EN using OBUF.
Mapping port rio.PINOUT_STEPDIR4_STEP using OBUF.
Mapping port rio.PINOUT_STEPDIR5_DIR using OBUF.
Mapping port rio.PINOUT_STEPDIR5_EN using OBUF.
Mapping port rio.PINOUT_STEPDIR5_STEP using OBUF.
Mapping port rio.sysclk_in using IBUF.

10.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

10.19. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

10.20. Executing TECHMAP pass (map to technology primitives).

10.20.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.20.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
No more expansions possible.
<suppressed ~943 debug messages>

10.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~3 debug messages>

10.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

10.23. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

10.24. Executing ABC9 pass.

10.24.1. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.2. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module rio.
Found 0 SCCs.

10.24.4. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.5. Executing PROC pass (convert processes to netlists).

10.24.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.24.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

10.24.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

10.24.5.4. Executing PROC_INIT pass (extract init attributes).

10.24.5.5. Executing PROC_ARST pass (detect async resets in processes).

10.24.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

10.24.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

10.24.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

10.24.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

10.24.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.24.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.24.5.12. Executing OPT_EXPR pass (perform const folding).

10.24.6. Executing TECHMAP pass (map to technology primitives).

10.24.6.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.24.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

10.24.7. Executing OPT pass (performing simple optimizations).

10.24.7.1. Executing OPT_EXPR pass (perform const folding).

10.24.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

10.24.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

10.24.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

10.24.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

10.24.7.6. Executing OPT_DFF pass (perform DFF optimizations).

10.24.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

10.24.7.8. Executing OPT_EXPR pass (perform const folding).

10.24.7.9. Finished OPT passes. (There is nothing left to do.)

10.24.8. Executing TECHMAP pass (map to technology primitives).

10.24.8.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

10.24.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

10.24.9. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

10.24.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~1725 debug messages>

10.24.11. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

10.24.13. Executing TECHMAP pass (map to technology primitives).

10.24.13.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.24.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~253 debug messages>

10.24.14. Executing OPT pass (performing simple optimizations).

10.24.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.24.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.24.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.24.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

10.24.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

10.24.14.6. Executing OPT_DFF pass (perform DFF optimizations).

10.24.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

10.24.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

10.24.14.9. Finished OPT passes. (There is nothing left to do.)

10.24.15. Executing AIGMAP pass (map logic to AIG).

10.24.16. Executing AIGMAP pass (map logic to AIG).
Module rio: replaced 1797 cells with 11020 new cells, skipped 4508 cells.
  replaced 4 cell types:
     485 $_OR_
     600 $_XOR_
      26 $_ORNOT_
     686 $_MUX_
  not replaced 12 cell types:
       6 $scopeinfo
     521 $_NOT_
    1318 $_AND_
     236 DFF
     532 DFFE
      14 DFFSE
      33 DFFR
     105 DFFRE
       9 IBUF
      11 OBUF
     920 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
     803 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111

10.24.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

10.24.16.3. Executing XAIGER backend.
<suppressed ~931 debug messages>
Extracted 5687 AND gates and 16093 wires from module `rio' to a netlist network with 949 inputs and 1746 outputs.

10.24.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

10.24.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    949/   1746  and =    4689  lev =   20 (3.29)  mem = 0.15 MB  box = 1723  bb = 1723
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    949/   1746  and =    4785  lev =   36 (5.63)  mem = 0.15 MB  ch =  651  box = 1723  bb = 1723
ABC: + &if -W 500 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   52. Obj =  136. Set =  564. CutMin = no
ABC: Node =    4785.  Ch =   599.  Total mem =    1.58 MB. Peak cut mem =    0.08 MB.
ABC: P:  Del = 17984.00.  Ar =    1477.0.  Edge =     5530.  Cut =    27716.  T =     0.00 sec
ABC: P:  Del = 17984.00.  Ar =    1480.0.  Edge =     5551.  Cut =    27147.  T =     0.00 sec
ABC: P:  Del = 17984.00.  Ar =    1397.0.  Edge =     4742.  Cut =    28682.  T =     0.01 sec
ABC: F:  Del = 17984.00.  Ar =    1244.0.  Edge =     4397.  Cut =    23632.  T =     0.00 sec
ABC: A:  Del = 17984.00.  Ar =    1217.0.  Edge =     4132.  Cut =    24093.  T =     0.01 sec
ABC: A:  Del = 17984.00.  Ar =    1202.0.  Edge =     4101.  Cut =    24046.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    949/   1746  and =    4346  lev =   29 (4.64)  mem = 0.14 MB  box = 1723  bb = 1723
ABC: Mapping (K=4)  :  lut =   1193  edge =    4037  lev =   12 (2.41)  levB =   13  mem = 0.06 MB
ABC: LUT = 1193 : 2=218 18.3 %  3=299 25.1 %  4=676 56.7 %  Ave = 3.38
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.51 seconds, total: 0.51 seconds

10.24.16.6. Executing AIGER frontend.
<suppressed ~5402 debug messages>
Removed 6367 unused cells and 12506 unused wires.

10.24.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1203
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:     1746
Removing temp directory.

10.24.17. Executing TECHMAP pass (map to technology primitives).

10.24.17.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

10.24.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>
Removed 397 unused cells and 21533 unused wires.

10.25. Executing TECHMAP pass (map to technology primitives).

10.25.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.25.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$0d3ac82cf5b8a192d5ff4c23e3143360366ae882\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$a010528dfa56506a075642ed88f758b6719a77f1\$lut for cells of type $lut.
Using template $paramod$23ba03b3f106a8b0f20f18bfebd862b419996ddc\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$50ae037bea16070af222263fc6c06efd57346ae1\$lut for cells of type $lut.
Using template $paramod$992bdc10cff2c6edd722994f0e1044bc863f79f7\$lut for cells of type $lut.
Using template $paramod$b86b68a00733dbecb31d58a14a13683475a2002a\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$65d5d5c1e01bf41ee659754efba932f3d99198e5\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$ab2a0e40f059a1b02be99afabe16fa27dd5f64c0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001101 for cells of type $lut.
Using template $paramod$01c90452d4d04d178ef3ca3be8d1ce3312f0b4d8\$lut for cells of type $lut.
Using template $paramod$2ebd9f87a0703976af6b989bfcc694db962140ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$79432275bae6ba3c8cd1f392a278d15c8c6d8c77\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod$7c085cdbf0919cd3ad402d9495d97f0d71e4db93\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$047d0df6c87b7042d6d894454cb0917def4e9363\$lut for cells of type $lut.
Using template $paramod$a23abd5573f0b1eda1acce323f6ae8f8e92a28a1\$lut for cells of type $lut.
Using template $paramod$92766cdac81438edcf135ba36ac2accafbf1349b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$19e5b38cca183d8b6b3a15d20dc995c09cd71893\$lut for cells of type $lut.
Using template $paramod$f7a897257decedfb6cc642e53d65fef7fc0df390\$lut for cells of type $lut.
Using template $paramod$92cb4f6b0ce9fa4696f637c346a3ed339c593bc0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$384ca820697864e5f2b9b7570e4569b99724b771\$lut for cells of type $lut.
Using template $paramod$17f1b90a5c6d7e6613368c5e7d3f44dd634e59e2\$lut for cells of type $lut.
Using template $paramod$ffbdf3001f0d2972a014e8e8948b59dcda97f633\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$d7f944af2b35df3f42510000c7ca890e7f478a75\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$2f927054f797a5706e69053a974d4b702d1f3194\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$1780bd352ec1af971e2f8a4e64b861091a94595b\$lut for cells of type $lut.
Using template $paramod$d285fa12ff128f10e974409599fea6505146e7ca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$4492b910aadff9bebab3cf3b69e5d3cd7ef66809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010100 for cells of type $lut.
Using template $paramod$afb8959a93937986ded51b1cddcab9e31c6ea2ed\$lut for cells of type $lut.
Using template $paramod$0d5e420ccfc2dddc13533c0817d1e17e68a2c136\$lut for cells of type $lut.
Using template $paramod$bea08a495d16293f8cc454a45845d26cde0762b6\$lut for cells of type $lut.
Using template $paramod$e211c3929b7c4a5a9666180a7619ec6dc9c22584\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$8702d826849a5d8af6dd5fde2d287a6443f7d076\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110010 for cells of type $lut.
Using template $paramod$d2b5e7b5429639878c0a614cf001753581eebd9c\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$923dcce08caf6566907491e53d81680cb3c74b4c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$517625bf4a7b846fd553901d881a35fcc8afe4c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$e84e4a245515000cd6930e0f4535753ed485f71e\$lut for cells of type $lut.
Using template $paramod$b9d8b7e91a2c68da033af948ea0bd8bdebbaf6b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101001 for cells of type $lut.
Using template $paramod$4cb6ffbf5a338a8a9e8c5ebb3e1abd9c29759518\$lut for cells of type $lut.
Using template $paramod$d76edc10344198fdbbc083cbc9765a888a1f48f2\$lut for cells of type $lut.
Using template $paramod$c99909b0661e592bb9701b15671a24d993e3be48\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$47d363ae7b1a0e81207e02fe31af85b6bf36a2ac\$lut for cells of type $lut.
Using template $paramod$54a853cac0e65b945d96d7dd0e9cca8bb9f3a21e\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$766f851776a2d25e13728c9147ddfe7ff70917a3\$lut for cells of type $lut.
Using template $paramod$35059585e93e18989247e13034fd6a1ce4de9957\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$64c98a93c00f2932cdb01ce29e3a216b58ad51fe\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod$5348912da867a611a8088b6b8b27a62d65f1de6e\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100110 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$71e3b2919e6ea9ecd949d9cf25cc563138d99753\$lut for cells of type $lut.
Using template $paramod$ac0496fcebb0f2011b0bd8f43e25017a354391ee\$lut for cells of type $lut.
Using template $paramod$5f3abb125a0361a143f12eec230ed33f6f988a00\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$4fc49ea89d7e6ca350bd19556e3d98271f634ffd\$lut for cells of type $lut.
Using template $paramod$dbe302e2055f5f85fca1ab0927b7743105f90562\$lut for cells of type $lut.
Using template $paramod$303607065f6eb15d8928442960164bdd7e8c8c39\$lut for cells of type $lut.
Using template $paramod$9d8c9ea2bbd2bc2f71790afc86ab93c67b053afc\$lut for cells of type $lut.
Using template $paramod$619b7c9a4d44585e10b42f7fb79b16304cca97c5\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000110 for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$59d8f5549efd104768b117dad79f378894badecb\$lut for cells of type $lut.
Using template $paramod$895ae344221d6b128614f14c44eda6a64bccf154\$lut for cells of type $lut.
Using template $paramod$1bd0f5b956171cd6004fa294e7fec79af7818b32\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$566d25958ae3c7bb6da39604781cb619384ca89a\$lut for cells of type $lut.
Using template $paramod$027b71830bd0fbfb04ad11206c5a0de76ed9d3f5\$lut for cells of type $lut.
Using template $paramod$ba1896d66a423e98734f1413876089b255b9a5bb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
No more expansions possible.
<suppressed ~2893 debug messages>

10.26. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in rio.

10.27. Executing SETUNDEF pass (replace undef values with defined constants).

10.28. Executing HILOMAP pass (mapping to constant drivers).
Removed 1 unused cells and 2591 unused wires.

10.29. Executing AUTONAME pass.
Renamed 21461 objects in module rio (88 iterations).
<suppressed ~3170 debug messages>

10.30. Executing HIERARCHY pass (managing design hierarchy).

10.30.1. Analyzing design hierarchy..
Top module:  \rio

10.30.2. Analyzing design hierarchy..
Top module:  \rio
Removed 0 unused modules.

10.31. Printing statistics.

=== rio ===

   Number of wires:               1137
   Number of wire bits:           4261
   Number of public wires:        1137
   Number of public wire bits:    4261
   Number of ports:                 20
   Number of port bits:             20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2153
     $scopeinfo                      6
     DFF                           236
     DFFE                          532
     DFFR                           33
     DFFRE                         105
     DFFSE                          14
     GND                             1
     IBUF                            9
     LUT1                           10
     LUT2                          220
     LUT3                          299
     LUT4                          677
     OBUF                           11

10.32. Executing CHECK pass (checking for obvious problems).
Checking module rio...
Found and reported 0 problems.

10.33. Executing JSON backend.

End of script. Logfile hash: 626b60c974, CPU: user 2.72s system 0.05s, MEM: 76.57 MB peak
Yosys 0.44+71 (git sha1 6b9321250, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 16% 1x abc9_exe (0 sec), 12% 8x techmap (0 sec), ...
