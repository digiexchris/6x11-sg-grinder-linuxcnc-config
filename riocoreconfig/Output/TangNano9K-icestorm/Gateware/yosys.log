
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.44+71 (git sha1 6b9321250, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Parsing `globals.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: globals.v
Parsing Verilog input from `globals.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `spi.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: spi.v
Parsing Verilog input from `spi.v' to AST representation.
Storing AST representation for module `$abstract\spi'.
Successfully finished Verilog frontend.

-- Parsing `debouncer.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: debouncer.v
Parsing Verilog input from `debouncer.v' to AST representation.
Storing AST representation for module `$abstract\debouncer'.
Successfully finished Verilog frontend.

-- Parsing `toggle.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: toggle.v
Parsing Verilog input from `toggle.v' to AST representation.
Storing AST representation for module `$abstract\toggle'.
Successfully finished Verilog frontend.

-- Parsing `pwmmod.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: pwmmod.v
Parsing Verilog input from `pwmmod.v' to AST representation.
Storing AST representation for module `$abstract\pwmmod'.
Successfully finished Verilog frontend.

-- Parsing `rio.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: rio.v
Parsing Verilog input from `rio.v' to AST representation.
Storing AST representation for module `$abstract\rio'.
Successfully finished Verilog frontend.

-- Running command `synth_gowin -noalu -nowidelut -top rio -json rio.json' --

7. Executing SYNTH_GOWIN pass.

7.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER4_MEM'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES4_MEM'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\DQS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Generating RTLIL representation for module `\DCS'.
Successfully finished Verilog frontend.

7.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

7.3. Executing HIERARCHY pass (managing design hierarchy).

7.4. Executing AST frontend in derive mode using pre-parsed AST for module `\rio'.
Generating RTLIL representation for module `\rio'.

7.4.1. Analyzing design hierarchy..
Top module:  \rio
Parameter \BUFFER_SIZE = 16'0000000000100000
Parameter \MSGID = 1953067639

7.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\spi'.
Parameter \BUFFER_SIZE = 16'0000000000100000
Parameter \MSGID = 1953067639
Generating RTLIL representation for module `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi'.

7.4.3. Analyzing design hierarchy..
Top module:  \rio
Used module:     $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi

7.4.4. Analyzing design hierarchy..
Top module:  \rio
Used module:     $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi
Removing unused module `$abstract\rio'.
Removing unused module `$abstract\pwmmod'.
Removing unused module `$abstract\toggle'.
Removing unused module `$abstract\debouncer'.
Removing unused module `$abstract\spi'.
Removed 5 unused modules.

7.5. Executing PROC pass (convert processes to netlists).

7.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Cleaned up 1 empty switch.

7.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189 in module DFFS.
Marked 2 switch rules as full_case in process $proc$spi.v:47$364 in module $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.
Marked 1 switch rules as full_case in process $proc$spi.v:28$359 in module $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.
Marked 1 switch rules as full_case in process $proc$rio.v:64$348 in module rio.
Marked 2 switch rules as full_case in process $proc$rio.v:47$344 in module rio.
Removed a total of 0 dead cases.

7.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 61 assignments to connections.

7.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
  Set init value: \Q = 1'0
Found init rule in `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:0$366'.
  Set init value: \sync = 1'0
Found init rule in `\rio.$proc$rio.v:45$351'.
  Set init value: \timeout_counter = 23'00000000000000000000000
Found init rule in `\rio.$proc$rio.v:30$349'.
  Set init value: \INTERFACE_TIMEOUT = 1'0

7.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Found async reset \CLEAR in `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
Found async reset \PRESET in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Found async reset \PRESET in `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
Found async reset \CLEAR in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Found async reset \CLEAR in `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
Found async reset \PRESET in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Found async reset \PRESET in `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.

7.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~32 debug messages>

7.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
Creating decoders for process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
     1/8: $1$lookahead\mem3$286[15:0]$303
     2/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$278[3:0]$299
     3/8: $1$lookahead\mem2$285[15:0]$302
     4/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$277[3:0]$298
     5/8: $1$lookahead\mem1$284[15:0]$301
     6/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$276[3:0]$297
     7/8: $1$lookahead\mem0$283[15:0]$300
     8/8: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$275[3:0]$296
Creating decoders for process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
Creating decoders for process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
     1/4: $1$lookahead\mem1$250[15:0]$259
     2/4: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$246[3:0]$257
     3/4: $1$lookahead\mem0$249[15:0]$258
     4/4: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$245[3:0]$256
Creating decoders for process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
Creating decoders for process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
     1/2: $1$lookahead\mem$231[15:0]$236
     2/2: $1$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$229[3:0]$235
Creating decoders for process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Creating decoders for process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Creating decoders for process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Creating decoders for process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Creating decoders for process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Creating decoders for process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Creating decoders for process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Creating decoders for process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Creating decoders for process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Creating decoders for process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Creating decoders for process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Creating decoders for process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
Creating decoders for process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Creating decoders for process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Creating decoders for process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Creating decoders for process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Creating decoders for process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Creating decoders for process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Creating decoders for process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Creating decoders for process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Creating decoders for process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
Creating decoders for process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
Creating decoders for process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:0$366'.
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:47$364'.
     1/1: $0\byte_data_sent[31:0]
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:38$362'.
     1/2: $0\sync[0:0]
     2/2: $0\byte_data_received[31:0]
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:28$359'.
     1/2: $0\byte_data_receive[31:0]
     2/2: $0\bitcnt[15:0]
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:19$355'.
Creating decoders for process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:16$352'.
Creating decoders for process `\rio.$proc$rio.v:45$351'.
Creating decoders for process `\rio.$proc$rio.v:31$350'.
Creating decoders for process `\rio.$proc$rio.v:30$349'.
Creating decoders for process `\rio.$proc$rio.v:64$348'.
     1/1: $0\header_tx[31:0]
Creating decoders for process `\rio.$proc$rio.v:47$344'.
     1/2: $0\timeout_counter[22:0]
     2/2: $0\INTERFACE_TIMEOUT[0:0]
Creating decoders for process `\rio.$proc$rio.v:41$342'.

7.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\rio.\ESTOP' from process `\rio.$proc$rio.v:31$350'.

7.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$496' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$497' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$498' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$499' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$275' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$500' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$276' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$501' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$277' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$502' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$278' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$503' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$283' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$504' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$284' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$505' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$285' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$506' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$286' using process `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
  created $dff cell `$procdff$507' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$508' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$509' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$245' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$510' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$246' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$511' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$249' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$512' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$250' using process `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
  created $dff cell `$procdff$513' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$514' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$229' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$515' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$231' using process `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
  created $dff cell `$procdff$516' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
  created $adff cell `$procdff$519' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
  created $adff cell `$procdff$522' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
  created $adff cell `$procdff$525' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
  created $adff cell `$procdff$528' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
  created $dff cell `$procdff$529' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
  created $dff cell `$procdff$530' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
  created $dff cell `$procdff$531' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
  created $dff cell `$procdff$532' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
  created $dff cell `$procdff$533' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
  created $dff cell `$procdff$534' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
  created $adff cell `$procdff$537' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
  created $adff cell `$procdff$540' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
  created $adff cell `$procdff$543' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
  created $adff cell `$procdff$546' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
  created $dff cell `$procdff$547' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
  created $dff cell `$procdff$548' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
  created $dff cell `$procdff$549' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
  created $dff cell `$procdff$550' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
  created $dff cell `$procdff$551' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
  created $dff cell `$procdff$552' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\byte_data_sent' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:47$364'.
  created $dff cell `$procdff$553' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\sync' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:38$362'.
  created $dff cell `$procdff$554' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\byte_data_received' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:38$362'.
  created $dff cell `$procdff$555' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\bitcnt' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:28$359'.
  created $dff cell `$procdff$556' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\byte_data_receive' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:28$359'.
  created $dff cell `$procdff$557' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\SSELr' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:19$355'.
  created $dff cell `$procdff$558' with positive edge clock.
Creating register for signal `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.\SCKr' using process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:16$352'.
  created $dff cell `$procdff$559' with positive edge clock.
Creating register for signal `\rio.\header_tx' using process `\rio.$proc$rio.v:64$348'.
  created $dff cell `$procdff$560' with positive edge clock.
Creating register for signal `\rio.\INTERFACE_TIMEOUT' using process `\rio.$proc$rio.v:47$344'.
  created $dff cell `$procdff$561' with positive edge clock.
Creating register for signal `\rio.\timeout_counter' using process `\rio.$proc$rio.v:47$344'.
  created $dff cell `$procdff$562' with positive edge clock.
Creating register for signal `\rio.\INTERFACE_SYNCr' using process `\rio.$proc$rio.v:41$342'.
  created $dff cell `$procdff$563' with positive edge clock.

7.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$332'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
Removing empty process `RAM16S4.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$287'.
Removing empty process `RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$274'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
Removing empty process `RAM16S2.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$251'.
Removing empty process `RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
Removing empty process `RAM16S1.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$232'.
Removing empty process `ALU.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$227'.
Removing empty process `DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Removing empty process `DFFNCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$223'.
Removing empty process `DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Removing empty process `DFFNC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$221'.
Removing empty process `DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Removing empty process `DFFNPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$219'.
Removing empty process `DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Removing empty process `DFFNP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$217'.
Removing empty process `DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
Removing empty process `DFFNRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$215'.
Removing empty process `DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
Removing empty process `DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$213'.
Removing empty process `DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
Removing empty process `DFFNSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$211'.
Removing empty process `DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
Removing empty process `DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$209'.
Removing empty process `DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
Removing empty process `DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$207'.
Removing empty process `DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Removing empty process `DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$205'.
Removing empty process `DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Removing empty process `DFFCE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$203'.
Removing empty process `DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Removing empty process `DFFC.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$201'.
Removing empty process `DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Removing empty process `DFFPE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$199'.
Removing empty process `DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Removing empty process `DFFP.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$197'.
Removing empty process `DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
Removing empty process `DFFRE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$195'.
Removing empty process `DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
Removing empty process `DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$193'.
Removing empty process `DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
Removing empty process `DFFSE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$191'.
Removing empty process `DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
Removing empty process `DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$189'.
Removing empty process `DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$188'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
Removing empty process `DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$187'.
Removing empty process `DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$186'.
Removing empty process `DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$185'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:0$366'.
Found and cleaned up 4 empty switches in `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:47$364'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:47$364'.
Found and cleaned up 2 empty switches in `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:38$362'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:38$362'.
Found and cleaned up 2 empty switches in `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:28$359'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:28$359'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:19$355'.
Removing empty process `$paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.$proc$spi.v:16$352'.
Removing empty process `rio.$proc$rio.v:45$351'.
Removing empty process `rio.$proc$rio.v:31$350'.
Removing empty process `rio.$proc$rio.v:30$349'.
Found and cleaned up 1 empty switch in `\rio.$proc$rio.v:64$348'.
Removing empty process `rio.$proc$rio.v:64$348'.
Found and cleaned up 2 empty switches in `\rio.$proc$rio.v:47$344'.
Removing empty process `rio.$proc$rio.v:47$344'.
Removing empty process `rio.$proc$rio.v:41$342'.
Cleaned up 32 empty switches.

7.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.
<suppressed ~3 debug messages>
Optimizing module rio.
<suppressed ~3 debug messages>

7.6. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$481bef7b13689c5ba29dac31d15f6b98adf424e5\spi.
<suppressed ~1 debug messages>

7.7. Executing TRIBUF pass.

7.8. Executing DEMINOUT pass (demote inout ports to input or output).

7.9. Executing SYNTH pass.

7.9.1. Executing PROC pass (convert processes to netlists).

7.9.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.9.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.9.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.9.1.4. Executing PROC_INIT pass (extract init attributes).

7.9.1.5. Executing PROC_ARST pass (detect async resets in processes).

7.9.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.9.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.9.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.9.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.9.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.9.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.9.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 22 unused cells and 63 unused wires.
<suppressed ~31 debug messages>

7.9.4. Executing CHECK pass (checking for obvious problems).
Checking module rio...
Found and reported 0 problems.

7.9.5. Executing OPT pass (performing simple optimizations).

7.9.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

7.9.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.9.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.5.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 1 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 2 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 3 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 4 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 5 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 6 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 7 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 8 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 9 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 10 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 11 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 12 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 13 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 14 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 15 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 16 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 17 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 18 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 19 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 20 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 21 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 22 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 23 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 24 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 25 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 26 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 27 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 28 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 29 on $procdff$560 ($dff) from module rio.
Setting constant 1-bit at position 30 on $procdff$560 ($dff) from module rio.
Setting constant 0-bit at position 31 on $procdff$560 ($dff) from module rio.

7.9.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 5 unused wires.
<suppressed ~5 debug messages>

7.9.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.5.9. Rerunning OPT passes. (Maybe there is more to do..)

7.9.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

7.9.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.9.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.5.13. Executing OPT_DFF pass (perform DFF optimizations).

7.9.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.5.16. Finished OPT passes. (There is nothing left to do.)

7.9.6. Executing FSM pass (extract and optimize FSM).

7.9.6.1. Executing FSM_DETECT pass (finding FSMs in design).

7.9.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.9.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.9.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.9.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.9.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.9.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.9.7. Executing OPT pass (performing simple optimizations).

7.9.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

7.9.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.9.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\spi0.$procdff$556 ($dff) from module rio (D = $flatten\spi0.$procmux$476_Y, Q = \spi0.bitcnt, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$565 ($sdff) from module rio (D = $flatten\spi0.$add$spi.v:33$361_Y, Q = \spi0.bitcnt).
Adding EN signal on $flatten\spi0.$procdff$553 ($dff) from module rio (D = $flatten\spi0.$procmux$459_Y, Q = \spi0.byte_data_sent).
Adding SRST signal on $auto$ff.cc:266:slice$567 ($dffe) from module rio (D = $flatten\spi0.$procmux$456_Y, Q = \spi0.byte_data_sent, rval = 1635017060).

7.9.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

7.9.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~1 debug messages>

7.9.7.9. Rerunning OPT passes. (Maybe there is more to do..)

7.9.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.9.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.9.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.7.13. Executing OPT_DFF pass (perform DFF optimizations).

7.9.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.7.16. Finished OPT passes. (There is nothing left to do.)

7.9.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 15 bits (of 16) from port B of cell rio.$flatten\spi0.$add$spi.v:33$361 ($add).
Removed top 1 bits (of 2) from port B of cell rio.$flatten\spi0.$eq$spi.v:17$353 ($eq).

7.9.9. Executing PEEPOPT pass (run peephole optimizers).

7.9.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rio:
  creating $macc model for $flatten\spi0.$add$spi.v:33$361 ($add).
  creating $alu model for $macc $flatten\spi0.$add$spi.v:33$361.
  creating $alu cell for $flatten\spi0.$add$spi.v:33$361: $auto$alumacc.cc:485:replace_alu$575
  created 1 $alu and 0 $macc cells.

7.9.12. Executing SHARE pass (SAT-based resource sharing).

7.9.13. Executing OPT pass (performing simple optimizations).

7.9.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.9.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.9.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.9.13.6. Executing OPT_DFF pass (perform DFF optimizations).

7.9.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.9.13.9. Finished OPT passes. (There is nothing left to do.)

7.9.14. Executing MEMORY pass.

7.9.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.9.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.9.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.9.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.9.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.9.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.9.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.9.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.9.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.9.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.10. Executing MEMORY_LIBMAP pass (mapping memories to cells).

7.11. Executing TECHMAP pass (map to technology primitives).

7.11.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

7.11.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

7.11.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

7.12. Executing OPT pass (performing simple optimizations).

7.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~1 debug messages>

7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.12.3. Executing OPT_DFF pass (perform DFF optimizations).

7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.12.5. Finished fast OPT passes.

7.13. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.14. Executing OPT pass (performing simple optimizations).

7.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$454:
      Old ports: A={ \spi0.byte_data_sent [30:0] 1'0 }, B=0, Y=$flatten\spi0.$procmux$454_Y
      New ports: A=\spi0.byte_data_sent [30:0], B=31'0000000000000000000000000000000, Y=$flatten\spi0.$procmux$454_Y [31:1]
      New connections: $flatten\spi0.$procmux$454_Y [0] = 1'0
  Optimizing cells in module \rio.
Performed a total of 1 changes.

7.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$574 ($sdffce) from module rio (D = { \spi0.byte_data_sent [30] \spi0.byte_data_sent [27:24] \spi0.byte_data_sent [22] \spi0.byte_data_sent [18] \spi0.byte_data_sent [16:14] \spi0.byte_data_sent [11:8] \spi0.byte_data_sent [6] \spi0.byte_data_sent [3:2] \spi0.byte_data_sent [0] }, Q = { \spi0.byte_data_sent [31] \spi0.byte_data_sent [28:25] \spi0.byte_data_sent [23] \spi0.byte_data_sent [19] \spi0.byte_data_sent [17:15] \spi0.byte_data_sent [12:9] \spi0.byte_data_sent [7] \spi0.byte_data_sent [4:3] \spi0.byte_data_sent [1] }, rval = 18'000000000000000000).

7.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.9. Rerunning OPT passes. (Maybe there is more to do..)

7.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$782 ($sdffce) from module rio.

7.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.16. Rerunning OPT passes. (Maybe there is more to do..)

7.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$454:
      Old ports: A={ \spi0.byte_data_sent [30:1] 1'0 }, B=31'0000000000000000000000000000000, Y=$flatten\spi0.$procmux$454_Y [31:1]
      New ports: A=\spi0.byte_data_sent [30:1], B=30'000000000000000000000000000000, Y=$flatten\spi0.$procmux$454_Y [31:2]
      New connections: $flatten\spi0.$procmux$454_Y [1] = 1'0
  Optimizing cells in module \rio.
Performed a total of 1 changes.

7.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$779 ($sdffce) from module rio.

7.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.23. Rerunning OPT passes. (Maybe there is more to do..)

7.14.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.14.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
    Consolidated identical input bits for $mux cell $flatten\spi0.$procmux$454:
      Old ports: A={ \spi0.byte_data_sent [30:2] 1'0 }, B=30'000000000000000000000000000000, Y=$flatten\spi0.$procmux$454_Y [31:2]
      New ports: A=\spi0.byte_data_sent [30:2], B=29'00000000000000000000000000000, Y=$flatten\spi0.$procmux$454_Y [31:3]
      New connections: $flatten\spi0.$procmux$454_Y [2] = 1'0
  Optimizing cells in module \rio.
Performed a total of 1 changes.

7.14.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.27. Executing OPT_DFF pass (perform DFF optimizations).

7.14.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.14.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.30. Rerunning OPT passes. (Maybe there is more to do..)

7.14.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

7.14.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.14.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.14.34. Executing OPT_DFF pass (perform DFF optimizations).

7.14.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.14.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.14.37. Finished OPT passes. (There is nothing left to do.)

7.15. Executing TECHMAP pass (map to technology primitives).

7.15.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.15.2. Continuing TECHMAP pass.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~301 debug messages>

7.16. Executing OPT pass (performing simple optimizations).

7.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.
<suppressed ~153 debug messages>

7.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.16.3. Executing OPT_DFF pass (perform DFF optimizations).

7.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 37 unused cells and 77 unused wires.
<suppressed ~39 debug messages>

7.16.5. Finished fast OPT passes.

7.17. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port rio.PININ_SPI0_MOSI using IBUF.
Mapping port rio.PININ_SPI0_SCLK using IBUF.
Mapping port rio.PININ_SPI0_SEL using IBUF.
Mapping port rio.PINOUT_SPI0_MISO using OBUF.
Mapping port rio.sysclk_in using IBUF.

7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

7.19. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.20. Executing TECHMAP pass (map to technology primitives).

7.20.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.20.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
No more expansions possible.
<suppressed ~75 debug messages>

7.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

7.23. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

7.24. Executing ABC9 pass.

7.24.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module rio.
Found 0 SCCs.

7.24.4. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.5. Executing PROC pass (convert processes to netlists).

7.24.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.24.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.24.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.24.5.4. Executing PROC_INIT pass (extract init attributes).

7.24.5.5. Executing PROC_ARST pass (detect async resets in processes).

7.24.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.24.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.24.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.24.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.24.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.24.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.24.5.12. Executing OPT_EXPR pass (perform const folding).

7.24.6. Executing TECHMAP pass (map to technology primitives).

7.24.6.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.24.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

7.24.7. Executing OPT pass (performing simple optimizations).

7.24.7.1. Executing OPT_EXPR pass (perform const folding).

7.24.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.24.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

7.24.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

7.24.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.24.7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.24.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

7.24.7.8. Executing OPT_EXPR pass (perform const folding).

7.24.7.9. Finished OPT passes. (There is nothing left to do.)

7.24.8. Executing TECHMAP pass (map to technology primitives).

7.24.8.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

7.24.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

7.24.9. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /opt/oss-cad-suite/lib/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

7.24.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~146 debug messages>

7.24.11. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

7.24.13. Executing TECHMAP pass (map to technology primitives).

7.24.13.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.24.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~253 debug messages>

7.24.14. Executing OPT pass (performing simple optimizations).

7.24.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.24.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.24.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.24.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rio.
Performed a total of 0 changes.

7.24.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rio'.
Removed a total of 0 cells.

7.24.14.6. Executing OPT_DFF pass (perform DFF optimizations).

7.24.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rio..

7.24.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rio.

7.24.14.9. Finished OPT passes. (There is nothing left to do.)

7.24.15. Executing AIGMAP pass (map logic to AIG).

7.24.16. Executing AIGMAP pass (map logic to AIG).
Module rio: replaced 60 cells with 308 new cells, skipped 279 cells.
  replaced 4 cell types:
      20 $_OR_
      15 $_XOR_
      13 $_ORNOT_
      12 $_MUX_
  not replaced 10 cell types:
       1 $scopeinfo
      37 $_NOT_
      40 $_AND_
       6 DFF
      13 DFFSE
      33 DFFRE
       4 IBUF
       1 OBUF
      52 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      92 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111

7.24.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.24.16.3. Executing XAIGER backend.
<suppressed ~63 debug messages>
Extracted 154 AND gates and 620 wires from module `rio' to a netlist network with 60 inputs and 147 outputs.

7.24.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

7.24.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     60/    147  and =      93  lev =    8 (1.38)  mem = 0.01 MB  box = 144  bb = 144
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     60/    147  and =      94  lev =   16 (1.43)  mem = 0.01 MB  ch =    6  box = 144  bb = 144
ABC: + &if -W 500 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   52. Obj =  136. Set =  564. CutMin = no
ABC: Node =      94.  Ch =     6.  Total mem =    0.09 MB. Peak cut mem =    0.01 MB.
ABC: P:  Del = 8927.00.  Ar =      49.0.  Edge =      170.  Cut =      387.  T =     0.00 sec
ABC: P:  Del = 8927.00.  Ar =      49.0.  Edge =      170.  Cut =      387.  T =     0.00 sec
ABC: P:  Del = 8927.00.  Ar =      41.0.  Edge =      121.  Cut =      417.  T =     0.00 sec
ABC: F:  Del = 8927.00.  Ar =      40.0.  Edge =      117.  Cut =      335.  T =     0.00 sec
ABC: A:  Del = 8927.00.  Ar =      40.0.  Edge =      116.  Cut =      341.  T =     0.00 sec
ABC: A:  Del = 8927.00.  Ar =      40.0.  Edge =      116.  Cut =      341.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: The network is not changed by "&mfs".
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =     60/    147  and =     107  lev =   16 (1.43)  mem = 0.01 MB  box = 144  bb = 144
ABC: Mapping (K=4)  :  lut =     40  edge =     116  lev =    5 (0.66)  levB =    6  mem = 0.00 MB
ABC: LUT = 40 : 2=19 47.5 %  3=6 15.0 %  4=15 37.5 %  Ave = 2.90
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.03 seconds, total: 0.03 seconds

7.24.16.6. Executing AIGER frontend.
<suppressed ~426 debug messages>
Removed 134 unused cells and 628 unused wires.

7.24.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:       41
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:      147
Removing temp directory.

7.24.17. Executing TECHMAP pass (map to technology primitives).

7.24.17.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

7.24.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>
Removed 1 unused cells and 1051 unused wires.

7.25. Executing TECHMAP pass (map to technology primitives).

7.25.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.25.2. Continuing TECHMAP pass.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$619b7c9a4d44585e10b42f7fb79b16304cca97c5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$72043e0aa7fa64cb454e3c2ca3dbe1636171896a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
No more expansions possible.
<suppressed ~194 debug messages>

7.26. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in rio.

7.27. Executing SETUNDEF pass (replace undef values with defined constants).

7.28. Executing HILOMAP pass (mapping to constant drivers).
Removed 1 unused cells and 88 unused wires.

7.29. Executing AUTONAME pass.
Renamed 364 objects in module rio (12 iterations).
<suppressed ~136 debug messages>

7.30. Executing HIERARCHY pass (managing design hierarchy).

7.30.1. Analyzing design hierarchy..
Top module:  \rio

7.30.2. Analyzing design hierarchy..
Top module:  \rio
Removed 0 unused modules.

7.31. Printing statistics.

=== rio ===

   Number of wires:                 57
   Number of wire bits:            216
   Number of public wires:          57
   Number of public wire bits:     216
   Number of ports:                  5
   Number of port bits:              5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                100
     $scopeinfo                      1
     DFF                             6
     DFFRE                          33
     DFFSE                          13
     GND                             1
     IBUF                            4
     LUT1                            1
     LUT2                           19
     LUT3                            6
     LUT4                           15
     OBUF                            1

7.32. Executing CHECK pass (checking for obvious problems).
Checking module rio...
Found and reported 0 problems.

7.33. Executing JSON backend.

End of script. Logfile hash: 489e4b94a6, CPU: user 0.73s system 0.05s, MEM: 42.62 MB peak
Yosys 0.44+71 (git sha1 6b9321250, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 27% 29x read_verilog (0 sec), 10% 1x abc9_exe (0 sec), ...
